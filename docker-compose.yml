services:
  db:
    image: postgres:15
    container_name: myapp_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: myapp_db
    restart: always
    ports:
      - "5433:5432" # ホスト5433→コンテナ5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Postgres Exporter
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@db:5432/myapp_db?sslmode=disable"
    depends_on:
      - db
    ports:
      - "9187:9187" # Prometheusが参照するポート

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090" # Prometheus Web UI
    depends_on:
      - postgres-exporter
      - redis-exporter
      - node-exporter

  # Alertmanager
  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    depends_on:
      - prometheus

  # Node Exporter
  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    pid: "host"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--path.rootfs=/rootfs"

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Exporter
  redis-exporter:
    image: oliver006/redis_exporter:v1.62.0
    container_name: redis_exporter
    restart: unless-stopped
    ports:
      - "9121:9121" # Prometheusがアクセスするポート
    command:
      - "--redis.addr=redis://redis:6379"
    depends_on:
      - redis

  # Grafana
  grafana:
    image: grafana/grafana:11.3.1
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000" # ホスト:3001 → Grafana:3000（frontendと被らないよう注意）
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  pgdata:
  redis-data:
  grafana-data:
  prometheus-data:
  alertmanager-data:
